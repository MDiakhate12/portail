[{"/home/dmouhammad/portail/src/index.js":"1","/home/dmouhammad/portail/src/App.js":"2","/home/dmouhammad/portail/src/reportWebVitals.js":"3","/home/dmouhammad/portail/src/components/Dashboard.js":"4","/home/dmouhammad/portail/src/components/listItems.js":"5","/home/dmouhammad/portail/src/components/CreateVM.js":"6","/home/dmouhammad/portail/src/components/ListVM.js":"7","/home/dmouhammad/portail/src/components/StepForm.js":"8","/home/dmouhammad/portail/src/components/ListProject.js":"9","/home/dmouhammad/portail/src/components/Orders.js":"10","/home/dmouhammad/portail/src/components/FirstStep.js":"11","/home/dmouhammad/portail/src/components/SecondStep.js":"12","/home/dmouhammad/portail/src/components/Confirm.js":"13","/home/dmouhammad/portail/src/components/Success.js":"14","/home/dmouhammad/portail/src/components/ThirdStep.js":"15","/home/dmouhammad/portail/src/components/Title.js":"16","/home/dmouhammad/portail/src/components/DataTable.js":"17","/home/dmouhammad/portail/src/components/MultipleCheckSelect.js":"18"},{"size":500,"mtime":1612962271887,"results":"19","hashOfConfig":"20"},{"size":272,"mtime":1612962271883,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1612962271887,"results":"22","hashOfConfig":"20"},{"size":5600,"mtime":1612962271883,"results":"23","hashOfConfig":"20"},{"size":1448,"mtime":1612962271883,"results":"24","hashOfConfig":"20"},{"size":4805,"mtime":1612962271883,"results":"25","hashOfConfig":"20"},{"size":481,"mtime":1612962271883,"results":"26","hashOfConfig":"20"},{"size":5305,"mtime":1612978113270,"results":"27","hashOfConfig":"20"},{"size":3142,"mtime":1612962271883,"results":"28","hashOfConfig":"20"},{"size":2098,"mtime":1612962271883,"results":"29","hashOfConfig":"20"},{"size":6369,"mtime":1612962271883,"results":"30","hashOfConfig":"20"},{"size":7323,"mtime":1612962271883,"results":"31","hashOfConfig":"20"},{"size":5119,"mtime":1612962271883,"results":"32","hashOfConfig":"20"},{"size":876,"mtime":1612962271883,"results":"33","hashOfConfig":"20"},{"size":2995,"mtime":1612962271883,"results":"34","hashOfConfig":"20"},{"size":342,"mtime":1612962271883,"results":"35","hashOfConfig":"20"},{"size":377,"mtime":1612962271883,"results":"36","hashOfConfig":"20"},{"size":3049,"mtime":1612962271883,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"kmvbpv",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},"/home/dmouhammad/portail/src/index.js",[],["83","84"],"/home/dmouhammad/portail/src/App.js",[],"/home/dmouhammad/portail/src/reportWebVitals.js",[],"/home/dmouhammad/portail/src/components/Dashboard.js",["85","86","87","88"],"import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Drawer from '@material-ui/core/Drawer'\nimport Box from '@material-ui/core/Box'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport Badge from '@material-ui/core/Badge'\nimport Container from '@material-ui/core/Container'\nimport Link from '@material-ui/core/Link'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport { Route, Switch } from 'react-router-dom'\nimport { mainListItems } from './listItems'\nimport CreateVM from './CreateVM'\nimport ListVM from './ListVM'\nimport StepForm from './StepForm'\nimport ListProject from './ListProject'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://sonatel.sn/\">\n        Sonatel Faas Cloud\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}))\n\nfunction Dashboard() {\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(true)\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden,\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Faas - VMs Handling\n          </Typography>\n          {\n            // <IconButton color=\"inherit\">\n            //   <Badge badgeContent={4} color=\"secondary\">\n            //     <NotificationsIcon />\n            //   </Badge>\n            // </IconButton>\n          }\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Switch>\n            <Route path=\"/\" exact={true} component={StepForm} />\n            <Route path=\"/list-projects\" component={ListProject} />\n            <Route path=\"/project/:projectId/vms\" component={ListVM} />\n          </Switch>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  )\n}\n\nexport default Dashboard\n","/home/dmouhammad/portail/src/components/listItems.js",[],"/home/dmouhammad/portail/src/components/CreateVM.js",["89","90"],"import React, {useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport axios from 'axios';\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  button: {\n    marginTop: theme.spacing(5),\n    marginLeft: theme.spacing(2)\n  }\n\n}));\n\nexport default function CreateVM() {\n  const classes = useStyles();\n  const [state, setState] = useState({});\n  const [error, setError] = useState(\"\");\n  const history = useHistory();\n  // setState({...state, osType : ''})\n\n  const handleChange = (evt) => {\n    const value = evt.target.value;\n    setState({\n      ...state,\n      [evt.target.name]: value\n    });\n  }\n\n  const onSubmit = (evt) => {\n    console.log(\"FROM CREATE:\", state);\n    // axios.post(\"https://faas-cloud-backend.mouhammad.ml/\", state)\n    // .then(res => {\n    //   console.log(typeof res.data);\n    //   if(typeof res.data === 'string' ) {\n    //     setError(res.data)\n    //   }else {\n    //     history.push(\"/list-vm\");\n    //   }\n    // })\n    // .catch(err => console.log(err))\n    // console.log(\"object\");\n  }\n\n\n  return (\n    <React.Fragment>\n    <Typography variant=\"h6\" gutterBottom>\n      VM creation Form\n    </Typography>\n    <Grid container spacing={3}>\n      <Grid item xs={12} sm={6}>\n        <TextField\n          required\n          id=\"vmName\"\n          name=\"name\"\n          label=\"Nom VM\"\n          onChange={handleChange}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <TextField\n          type=\"number\"\n          onChange={handleChange}\n          required\n          id=\"vmNumber\"\n          name=\"numberOfVm\"\n          label=\"Nombre de VM\"\n          fullWidth\n          autoComplete=\"family-name\"\n        />\n      </Grid>\n        <Grid item sm={4}>\n          <TextField\n            required\n            type=\"number\"\n            onChange={handleChange}\n            id=\"cpu\"\n            name=\"cpu\"\n            label=\"Nombre de CPU\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item sm={4}>\n          <TextField\n            type=\"number\"\n            onChange={handleChange}\n            required\n            id=\"ram\"\n            name=\"memory\"\n            label=\"Ram\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item sm={4}>\n          <TextField\n            required\n            type=\"number\"\n            onChange={handleChange}\n            id=\"disk\"\n            name=\"disk\"\n            label=\"Disque\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item sm={5}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"os-type\">Os Type</InputLabel>\n            <Select\n              required\n              labelId=\"os-type\"\n              onChange={handleChange}\n              id=\"os-type\"\n              value={state.osType}\n              name=\"osType\"\n            >\n              <MenuItem value={\"Debian\"}>Linux</MenuItem>\n              <MenuItem value={\"Windows\"}>Windows</MenuItem>\n              <MenuItem value={\"Mac\"}>MAc OS</MenuItem>\n            </Select> \n          </FormControl>\n        </Grid>\n        <Grid item sm={5}>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"os-image\">Os Image</InputLabel>\n            <Select\n              required\n              labelId=\"os-image\"\n              onChange={handleChange}\n              value={state.osImage}\n              id=\"os-image\"\n              name=\"osImage\"\n            >\n              <MenuItem value={\"Ubuntu 20.04\"}>Ubuntu budgie 18.04</MenuItem>\n              <MenuItem value={\"Windows\"}>Windows 10</MenuItem>\n              <MenuItem value={\"Mac\"}>MAc OS 9.1</MenuItem>\n            </Select> \n        </FormControl>\n      </Grid>\n    </Grid>\n      \n    <Button onClick={onSubmit} className={classes.button} variant=\"contained\" color=\"primary\">\n      Creer\n    </Button>\n    <Button className={classes.button} variant=\"contained\" color=\"secondary\">\n      Annuler\n    </Button>\n\n    {error && (\n      <Alert severity=\"error\" onClick={() => setError(null)}>\n        {error}\n      </Alert>\n    )}\n  </React.Fragment>\n  )\n}\n","/home/dmouhammad/portail/src/components/ListVM.js",[],"/home/dmouhammad/portail/src/components/StepForm.js",[],"/home/dmouhammad/portail/src/components/ListProject.js",["91","92","93","94","95","96","97","98"],"import React, { useState, useEffect } from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Link from '@material-ui/core/Link'\nimport axios from 'axios'\nimport Title from './Title'\nimport DataTable from './DataTable'\n\nfunction ListProject() {\n    const [projects, setProjects] = useState([])\n    const [rows, setRows] = useState([])\n\n    const columns = [\n        { field: \"id\", headerName: 'ID', hide:true },\n        { field: 'projectName', headerName: 'Nom Project', width: 130 },\n        { field: 'applicationType', headerName: 'Application Type', width: 130 },\n        { field: 'dependencies', headerName: 'dependencies', width: 150 },\n        { field: 'SLA', headerName: 'SLA', type: 'number' },\n        { field: 'environment', headerName: 'Environment' },\n        { field: 'dataSize', headerName: 'Data Size', type: 'number' },\n        { field: 'connectedApplications', headerName: 'Connected Application', width: 130 },\n        { field: 'techRequirements', headerName: 'Technical Requirements', width: 130 },\n        { field: 'costEstimation', headerName: 'Cost Estimation', type: 'number' },\n    ];\n\n    useEffect(() => {\n        axios\n            .get('https://faas-cloud-backend.mouhammad.ml/projects/')\n            .then((res) => {\n                console.log(res)\n                let r = (res.data.map(project => ({ id: project._id, ...project })))\n                setRows(r)\n            })\n    }, [])\n\n    return (\n        <div>\n            <Title>List of projects</Title>\n            {/* <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Nom Project</TableCell>\n            <TableCell>Application Type</TableCell>\n            <TableCell>dependencies</TableCell>\n            <TableCell>SLA</TableCell>\n            <TableCell>Environment</TableCell>\n            <TableCell>Data Size</TableCell>\n            <TableCell>Connected Application</TableCell>\n            <TableCell>Technical Requirements</TableCell>\n            <TableCell>Cost Estimation</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {projects.map((row) => (\n            <Link to={`/project/${row.id}/vms`}>\n              <TableRow key={row._id}>\n                <TableCell>{row.projectName}</TableCell>\n                <TableCell>{row.applicationType}</TableCell>\n                <TableCell>{row.dependencies}</TableCell>\n                <TableCell>{row.SLA}</TableCell>\n                <TableCell>{row.environment}</TableCell>\n                <TableCell>{row.dataSize}</TableCell>\n                <TableCell>{row.connectedApplications}</TableCell>\n                <TableCell>{row.techRequirements}</TableCell>\n                <TableCell>{row.costEstimation}</TableCell>\n              </TableRow>\n            </Link>\n          ))}\n        </TableBody>\n      </Table> */}\n            <DataTable columns={columns} rows={rows} />\n        </div>\n    )\n}\n\nexport default ListProject\n","/home/dmouhammad/portail/src/components/Orders.js",["99","100"],"import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport axios from 'axios'\nimport Title from './Title'\n\nexport default function Orders({ projectId }) {\n  const [vms, setVMs] = useState([])\n\n  useEffect(() => {\n    axios\n      .get(`https://faas-cloud-backend.mouhammad.ml/${projectId}/instances`)\n      .then((res) => {\n        console.log(res)\n        setVMs(res.data)\n      })\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Title>List of VMs</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Nom VM</TableCell>\n            <TableCell>RAM</TableCell>\n            <TableCell>CPU</TableCell>\n            <TableCell>Disk</TableCell>\n            <TableCell>OS Type</TableCell>\n            <TableCell>OS Image</TableCell>\n            <TableCell>IP address</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {vms.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.memory}</TableCell>\n              <TableCell>{row.cpu}</TableCell>\n              <TableCell>{row.disk}</TableCell>\n              <TableCell>{row.osType}</TableCell>\n              <TableCell>{row.osImage}</TableCell>\n              <TableCell></TableCell>\n              <TableCell align=\"right\">Running</TableCell>\n              <TableCell align=\"right\"></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      {/*\n        <div className={classes.seeMore}>\n          <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n            See more orders\n          </Link>\n        </div>\n      */}\n    </React.Fragment>\n  )\n}\n","/home/dmouhammad/portail/src/components/FirstStep.js",["101"],"import React, { Fragment } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { FormControl, InputLabel, Select, MenuItem, makeStyles } from '@material-ui/core'\nimport MultipleCheckSelect from './MultipleCheckSelect'\n\n\n// Destructuring props\nconst FirstStep = ({\n    handleNext,\n    handleChange,\n    values: {\n        projectName,\n        applicationType,\n        dependencies,\n        SLA,\n        environment,\n        connectedApplications,\n        techRequirements,\n        costEstimation,\n    },\n}) => {\n    // Check if all values are not empty or if there are some error\n    // const isValid =\n    //   projectName.length > 0 &&\n    //   !formErrors.projectName &&\n    //   applicationType.length > 0 &&\n    //   !formErrors.applicationType &&\n    //   dependencies.length > 0 &&\n    //   !formErrors.dependencies &&\n    //   gender.length > 0\n\n    return (\n        <Fragment>\n            <Grid container spacing={2} noValidate>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        fullWidth\n                        label=\"Project Name\"\n                        name=\"projectName\"\n                        placeholder=\"Your project name\"\n                        margin=\"normal\"\n                        value={projectName || ''}\n                        onChange={handleChange}\n                        // error={!!formErrors.projectName}\n                        // helperText={formErrors.projectName}\n                        required\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth>\n                        <InputLabel>SLA</InputLabel>\n                        <Select\n                            value={SLA || ''}\n                            onChange={handleChange}\n                            name=\"SLA\"\n                        >\n                            <MenuItem value={\"2\"}>Max 2 Hours Downtime</MenuItem>\n                            <MenuItem value={\"4\"}>Max 4 Hours Downtime</MenuItem>\n                            <MenuItem value={\"8\"}>Max 8 Hours Downtime</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth>\n                        <InputLabel>Application Type</InputLabel>\n                        <Select\n                            value={applicationType || ''}\n                            onChange={handleChange}\n                            name=\"applicationType\"\n                        >\n                            <MenuItem value={\"dev\"}>Development</MenuItem>\n                            <MenuItem value={\"big data\"}>Big Data</MenuItem>\n                            <MenuItem value={\"machine learning\"}>Machine Learning</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth>\n                        <InputLabel>Environment</InputLabel>\n                        <Select\n                            value={environment || ''}\n                            onChange={handleChange}\n                            name=\"environment\"\n                        >\n                            <MenuItem value={\"prod\"}>Production</MenuItem>\n                            <MenuItem value={\"dev\"}>Development</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <MultipleCheckSelect\n                        inputValue={dependencies || ''}\n                        handleChange={handleChange}\n                        inputName=\"dependencies\"\n                        inputTitle=\"Dependencies\"\n                    />\n\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        fullWidth\n                        label=\"connectedApplications\"\n                        name=\"connectedApplications\"\n                        placeholder=\"Agacy, Nessico\"\n                        type=\"dependencies\"\n                        value={connectedApplications || ''}\n                        onChange={handleChange}\n                        margin=\"normal\"\n                        // error={!!formErrors.dependencies}\n                        // helperText={formErrors.dependencies}\n                        required\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        fullWidth\n                        label=\"techRequirements\"\n                        name=\"techRequirements\"\n                        placeholder=\"Your techRequirements\"\n                        type=\"string\"\n                        value={techRequirements || ''}\n                        onChange={handleChange}\n                        margin=\"normal\"\n                        // error={!!formErrors.dependencies}\n                        // helperText={formErrors.dependencies}\n                        required\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        fullWidth\n                        label=\"costEstimation\"\n                        name=\"costEstimation\"\n                        placeholder=\"12000 M\"\n                        type=\"string\"\n                        value={costEstimation || ''}\n                        onChange={handleChange}\n                        margin=\"normal\"\n                        // error={!!formErrors.dependencies}\n                        // helperText={formErrors.dependencies}\n                        required\n                    />\n                </Grid>\n            </Grid>\n            <div\n                style={{ display: 'flex', marginTop: 50, justifyContent: 'flex-end' }}\n            >\n                <Button\n                    variant=\"contained\"\n                    // disabled={!isValid}\n                    color=\"primary\"\n                    onClick={handleNext}\n                >\n                    Next\n        </Button>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default FirstStep\n","/home/dmouhammad/portail/src/components/SecondStep.js",["102"],"import React, { useState } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    button: {\n        marginTop: theme.spacing(5),\n        marginLeft: theme.spacing(2),\n    },\n}))\n\n// Destructuring props\nconst SecondStep = ({\n    handleNext,\n    handleBack,\n    handleChange,\n    values\n}) => {\n\n    const classes = useStyles()\n\n    const {\n        cpu,\n        disk,\n        memory,\n        numberOfVm,\n        osImage,\n        osType,\n    } = values\n\n    const [error, setError] = useState('')\n\n    const handleSubmit = () => {\n        // Do whatever with the values\n        // values.dependencies = values.dependencies.split(',')\n        values.connectedApplications = values.connectedApplications.split(',')\n        values.techRequirements = values.techRequirements.split(',')\n\n        console.log(\"FROM SECOND STEP:\", values);\n\n        // GET CLOUD PROVIDERS ORIENTATION LIST \n        axios\n            .post('https://faas-cloud-backend.mouhammad.ml/provider-list', values)\n            .then((res) => {\n                console.log(res.data)\n                if (typeof res.data === 'string') {\n                    setError(res.data)\n                } else {\n                    console.log(res.data)\n                    let providers = res.data.Providers.map(provider => ({ value: provider.toLowerCase(), label: provider }))\n\n                    // IF ON PREMISE SCORE GREATER THAN 0.5\n                    if (res.data.score >= 0.5) {\n                        providers = [\n                            // RECOMMEND ON-PREMISE ON TOP\n                            { value: \"openstack\", label: \"OPENSTACK (ON PREMISE)\" },\n                            ...providers,\n                        ]\n                    } else {\n                        // RECOMMEND PROVIDER-LIST ON TOP\n                        providers = [\n                            ...providers,\n                            { value: \"openstack\", label: \"OPENSTACK (ON PREMISE)\" },\n                        ]\n                    }\n                    handleChange({\n                        target: {\n                            name: \"providerList\",\n                            value: providers\n                        }\n                    })\n                    handleChange({\n                        target: {\n                            name: \"provider\",\n                            value: providers[0].value\n                        }\n                    })\n                    handleNext()\n                }\n            })\n            .catch((err) => console.log(err))\n\n        // Show last component or success message\n    }\n\n\n    return (\n        <>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        type=\"number\"\n                        onChange={handleChange}\n                        value={numberOfVm || ''}\n                        required\n                        id=\"vmNumber\"\n                        name=\"numberOfVm\"\n                        label=\"Nombre de VM\"\n                        fullWidth\n                        autoComplete=\"family-name\"\n                    />\n                </Grid>\n                <Grid item sm={6}>\n                    <TextField\n                        required\n                        type=\"number\"\n                        value={cpu || ''}\n                        onChange={handleChange}\n                        id=\"cpu\"\n                        name=\"cpu\"\n                        label=\"Nombre de CPU\"\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item sm={6}>\n                    <TextField\n                        type=\"number\"\n                        value={memory || ''}\n                        onChange={handleChange}\n                        required\n                        id=\"ram\"\n                        name=\"memory\"\n                        label=\"Ram\"\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item sm={6}>\n                    <TextField\n                        required\n                        type=\"number\"\n                        value={disk || ''}\n                        onChange={handleChange}\n                        id=\"disk\"\n                        name=\"disk\"\n                        label=\"Disque\"\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item sm={6}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"os-type\">Os Type</InputLabel>\n                        <Select\n                            required\n                            labelId=\"os-type\"\n                            value={osType || ''}\n                            onChange={handleChange}\n                            id=\"os-type\"\n                            name=\"osType\"\n                        >\n                            <MenuItem value={'Debian'}>Linux</MenuItem>\n                            <MenuItem value={'Windows'}>Windows</MenuItem>\n                            <MenuItem value={'Mac'}>MAc OS</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item sm={6}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"os-image\">Os Image</InputLabel>\n                        <Select\n                            required\n                            labelId=\"os-image\"\n                            onChange={handleChange}\n                            value={osImage}\n                            id=\"os-image\"\n                            name=\"osImage\"\n                        >\n                            <MenuItem value={'Ubuntu 18.04'}>Ubuntu 18.04</MenuItem>\n                            <MenuItem value={'Windows'}>Windows 10</MenuItem>\n                            <MenuItem value={'Mac'}>MAc OS 9.1</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n\n            <div\n                style={{ display: 'flex', marginTop: 50, justifyContent: 'flex-end' }}\n            >\n                <Button\n                    variant=\"contained\"\n                    color=\"default\"\n                    onClick={handleBack}\n                    style={{ marginRight: 10 }}\n                >\n                    Back\n        </Button>\n                <Button\n                    variant=\"contained\"\n                    // disabled={!isValid}\n                    color=\"primary\"\n                    onClick={handleSubmit}\n                >\n                    Next\n        </Button>\n            </div>\n        </>\n    )\n}\n\nexport default SecondStep\n","/home/dmouhammad/portail/src/components/Confirm.js",[],"/home/dmouhammad/portail/src/components/Success.js",[],"/home/dmouhammad/portail/src/components/ThirdStep.js",["103"],"import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { Box } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    button: {\n        marginTop: theme.spacing(5),\n        marginLeft: theme.spacing(2),\n    },\n}))\n\n// Destructuring props\nconst ThirdStep = ({\n    handleNext,\n    handleBack,\n    handleChange,\n    values: { provider, providerList }\n}) => {\n    const classes = useStyles()\n\n    const [value, setValue] = useState(provider)\n\n    const onChange = (event) => {\n        setValue(event.target.value);\n        handleChange(event);\n    }\n\n    return (\n        <>\n            <Box width=\"100%\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\">\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n                    <FormLabel component=\"legend\">Select your provider</FormLabel>\n                    <RadioGroup aria-label=\"provider\" name=\"provider\" value={value} onChange={onChange}>\n                        {providerList.map((providerItem) => {\n                            if (providerList.indexOf(providerItem) === 0) {\n                                return (\n                                    <FormControlLabel key={providerItem.label} value={providerItem.value} control={<Radio />} label={`${providerItem.label} - RECOMMENDED`} />\n                                )\n                            }\n                            return (\n                                <FormControlLabel key={providerItem.label} value={providerItem.value} control={<Radio />} label={providerItem.label} />\n\n                            )\n                        }\n                        )}\n                    </RadioGroup>\n                </FormControl>\n            </Box>\n            <div\n                style={{ display: 'flex', marginTop: 50, justifyContent: 'flex-end' }}\n            >\n                <Button\n                    variant=\"contained\"\n                    color=\"default\"\n                    onClick={handleBack}\n                    style={{ marginRight: 10 }}\n                >\n                    Back\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    // disabled={!isValid}\n                    color=\"primary\"\n                    onClick={handleNext}\n                >\n                    Next\n                </Button>\n            </div>\n        </>\n    )\n}\n\nexport default ThirdStep\n\n\n\n","/home/dmouhammad/portail/src/components/Title.js",[],"/home/dmouhammad/portail/src/components/DataTable.js",[],"/home/dmouhammad/portail/src/components/MultipleCheckSelect.js",["104"],"import React, { useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n    noLabel: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst names = [\n    \"nginx\",\n    \"nodejs\",\n    \"mongodb\"\n];\n\nfunction getStyles(name, selectedValues, theme) {\n    return {\n        fontWeight:\n            selectedValues.indexOf(name) === -1\n                ? theme.typography.fontWeightRegular\n                : theme.typography.fontWeightMedium,\n    };\n}\n\nexport default function MultipleCheckSelect({inputValue, handleChange, inputName, inputTitle}) {\n    const classes = useStyles();\n    const theme = useTheme();\n    \n\n    const [selectedValues, setSelectedValues] = React.useState([]);\n    const onChange = (event) => {\n        setSelectedValues(event.target.value);\n        handleChange(event)\n    };\n    return (\n        <div>\n            <FormControl className={classes.formControl} fullWidth>\n                <InputLabel id=\"demo-mutiple-chip-label\">{inputTitle}</InputLabel>\n                <Select\n                    labelId=\"demo-mutiple-chip-label\"\n                    id=\"demo-mutiple-chip\"\n                    multiple\n                    name={inputName}\n                    value={selectedValues}\n                    onChange={onChange}\n                    input={<Input id=\"select-multiple-chip\" />}\n                    renderValue={(selected) => (\n                        <div className={classes.chips}>\n                            {selected.map((value) => (\n                                <Chip key={value} label={value} className={classes.chip} />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={MenuProps}\n                >\n                    {names.map((name) => (\n                        <MenuItem key={name} value={name} style={getStyles(name, selectedValues, theme)}>\n                            <Checkbox checked={selectedValues.indexOf(name) > -1} />\n                            <ListItemText primary={name} />\n                        </MenuItem>\n                    ))}\n                    \n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":13,"column":8,"nodeType":"111","messageId":"112","endLine":13,"endColumn":13},{"ruleId":"109","severity":1,"message":"113","line":18,"column":8,"nodeType":"111","messageId":"112","endLine":18,"endColumn":25},{"ruleId":"109","severity":1,"message":"114","line":21,"column":8,"nodeType":"111","messageId":"112","endLine":21,"endColumn":16},{"ruleId":"109","severity":1,"message":"115","line":129,"column":9,"nodeType":"111","messageId":"112","endLine":129,"endColumn":25},{"ruleId":"109","severity":1,"message":"116","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":13},{"ruleId":"109","severity":1,"message":"117","line":37,"column":9,"nodeType":"111","messageId":"112","endLine":37,"endColumn":16},{"ruleId":"109","severity":1,"message":"118","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":13},{"ruleId":"109","severity":1,"message":"119","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":17},{"ruleId":"109","severity":1,"message":"120","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":17},{"ruleId":"109","severity":1,"message":"121","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":17},{"ruleId":"109","severity":1,"message":"122","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":16},{"ruleId":"109","severity":1,"message":"123","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":12},{"ruleId":"109","severity":1,"message":"124","line":13,"column":12,"nodeType":"111","messageId":"112","endLine":13,"endColumn":20},{"ruleId":"109","severity":1,"message":"125","line":13,"column":22,"nodeType":"111","messageId":"112","endLine":13,"endColumn":33},{"ruleId":"109","severity":1,"message":"126","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":20},{"ruleId":"127","severity":1,"message":"128","line":21,"column":6,"nodeType":"129","endLine":21,"endColumn":8,"suggestions":"130"},{"ruleId":"109","severity":1,"message":"126","line":5,"column":53,"nodeType":"111","messageId":"112","endLine":5,"endColumn":63},{"ruleId":"109","severity":1,"message":"131","line":45,"column":12,"nodeType":"111","messageId":"112","endLine":45,"endColumn":17},{"ruleId":"109","severity":1,"message":"132","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"133","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'NotificationsIcon' is defined but never used.","'CreateVM' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","'axios' is defined but never used.","'history' is assigned a value but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Link' is defined but never used.","'projects' is assigned a value but never used.","'setProjects' is assigned a value but never used.","'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'projectId'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'error' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [projectId]",{"range":"139","text":"140"},[690,692],"[projectId]"]